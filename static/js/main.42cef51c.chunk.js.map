{"version":3,"sources":["components/TodoForm/TodoForm.js","components/Todo/Todo.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoForm","state","text","handleChange","event","_this","setState","Object","defineProperty","target","name","value","handleSubmit","preventDefault","props","onSubmit","id","shortid","generate","complete","react_default","a","createElement","this","className","placeholder","onChange","React","Component","Todo","style","textDecoration","todo","color","type","toggleComplete","htmlFor","onClick","toDelete","TodoApp","todos","todosToShow","addTodo","trim","prevState","concat","toConsumableArray","handleDelete","filter","map","_objectSpread","updateTodoToShow","lengthOfTodos","length","_this2","TodoForm_TodoForm","display","key","href","App","TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.42cef51c.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nexport default class TodoForm extends React.Component {\n  state = {\n    text: '',\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit({\n      id: shortid.generate(),\n      text: this.state.text,\n      complete: false,\n    });\n    this.setState({\n      text: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>todos</h1>\n        <input\n          name=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          // name={this.state.text}\n          onChange={this.handleChange}\n          value={this.state.text}\n        />\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Todo(props) {\n  return (\n    <li\n      className=\"\"\n      style={{\n        textDecoration:\n          props.todo.complete\n            ? 'line-through'\n            : '',\n        color:\n          props.todo.complete\n            ? '#e4e4e4'\n            : '',\n      }}\n    >\n      <div className=\"view\">\n        <input\n          name=\"status\"\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={props.todo.id}\n          onChange={props.toggleComplete}\n        />\n        <label htmlFor=\"todo-1\">\n          {props.text}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={props.toDelete}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  text: PropTypes.string.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  toDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport TodoForm from '../TodoForm/TodoForm';\nimport Todo from '../Todo/Todo';\n\nexport default class TodoApp extends React.Component {\n  state = {\n    todos: [],\n    todosToShow: 'all',\n  }\n\n  addTodo = (todo) => {\n    if (todo.text.trim() !== '') {\n      this.setState(prevState => ({\n        todos: [todo, ...prevState.todos],\n      }));\n    }\n  };\n\n  handleDelete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  toggleComplete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            complete: !todo.complete,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  updateTodoToShow = (value) => {\n    this.setState({\n      todosToShow: value,\n    });\n  }\n\n  lengthOfTodos = () => (\n    this.state.todos.filter(todo => todo.complete === false).length\n  )\n\n  render() {\n    let todos = [];\n\n    if (this.state.todosToShow === 'all') {\n      todos = [...this.state.todos];\n    } else if (this.state.todosToShow === 'active') {\n      todos = this.state.todos.filter(todo => !todo.complete);\n    } else if (this.state.todosToShow === 'complete') {\n      todos = this.state.todos.filter(todo => todo.complete);\n    }\n\n    if (this.state.todos.length === 0) {\n      return (\n        <section className=\"todoapp\">\n          <TodoForm className=\"header\" onSubmit={this.addTodo} />\n        </section>\n      );\n    }\n    return (\n      <section className=\"todoapp\">\n        <TodoForm className=\"header\" onSubmit={this.addTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            // checked={filteredTodos.every(item => item.completed)}\n          />\n          <label htmlFor=\"toggle-all\" id=\"\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <Todo\n                todos={todos}\n                todo={todo}\n                key={todo.id}\n                text={todo.text}\n                toDelete={() => this.handleDelete(todo.id)}\n                toggleComplete={() => this.toggleComplete(todo.id)}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${this.lengthOfTodos()} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                className=\"selected\"\n                onClick={() => this.updateTodoToShow('all')}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                onClick={() => this.updateTodoToShow('active')}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                onClick={() => this.updateTodoToShow('complete')}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n          />\n        </footer>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}