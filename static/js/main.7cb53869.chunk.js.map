{"version":3,"sources":["components/TodoForm/TodoForm.js","components/Todo/Todo.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["TodoForm","state","text","handleChange","_ref","target","_this","setState","Object","defineProperty","name","value","handleSubmit","event","preventDefault","props","onSubmit","id","shortid","generate","complete","react_default","a","createElement","this","className","placeholder","onChange","React","Component","Todo","style","textDecoration","todo","color","type","toggleComplete","checked","htmlFor","onClick","toDelete","TodoApp","todos","todosToShow","addTodo","trim","prevState","concat","toConsumableArray","handleDelete","filter","map","_objectSpread","updateTodoToShow","clearAllComplete","lengthOfTodos","length","toggleAllComplete","_this$state","todosNew","TodoForm_TodoForm","display","key","href","borderColor","App","TodoApp_TodoApp","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7cb53869.chunk.js","sourcesContent":["import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nexport default class TodoForm extends React.Component {\n  state = {\n    text: '',\n  }\n\n  handleChange = ({ target }) => {\n    this.setState({\n      [target.name]: target.value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onSubmit({\n      id: shortid.generate(),\n      text: this.state.text,\n      complete: false,\n    });\n    this.setState({\n      text: '',\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h1>todos</h1>\n        <input\n          name=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n          value={this.state.text}\n        />\n      </form>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Todo(props) {\n  return (\n    <li\n      className=\"\"\n      style={{\n        textDecoration:\n          props.todo.complete\n            ? 'line-through'\n            : '',\n        color:\n          props.todo.complete\n            ? '#e4e4e4'\n            : '',\n      }}\n    >\n      <div className=\"view\">\n        <input\n          name=\"status\"\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={props.todo.id}\n          onChange={props.toggleComplete}\n          checked={props.todo.complete ? 'checked' : ''}\n        />\n        <label htmlFor=\"todo-1\">\n          {props.text}\n        </label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={props.toDelete}\n        />\n      </div>\n    </li>\n  );\n}\n\nTodo.propTypes = {\n  todo: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  })).isRequired,\n  text: PropTypes.string.isRequired,\n  toggleComplete: PropTypes.func.isRequired,\n  toDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport TodoForm from '../TodoForm/TodoForm';\nimport Todo from '../Todo/Todo';\n\nexport default class TodoApp extends React.Component {\n  state = {\n    todos: [],\n    todosToShow: 'all',\n  }\n\n  addTodo = (todo) => {\n    if (todo.text.trim() !== '') {\n      this.setState(prevState => ({\n        todos: [todo, ...prevState.todos],\n      }));\n    }\n  };\n\n  handleDelete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== id),\n    }));\n  }\n\n  toggleComplete = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            complete: !todo.complete,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n  };\n\n  updateTodoToShow = (value) => {\n    this.setState({\n      todosToShow: value,\n    });\n  }\n\n  clearAllComplete = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.complete),\n    }));\n  }\n\n  lengthOfTodos = () => (\n    this.state.todos.filter(todo => todo.complete === false).length\n  )\n\n  toggleAllComplete = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => ({\n        ...todo,\n        complete: !prevState.toggleAllComplete,\n      })),\n      toggleAllComplete: !prevState.toggleAllComplete,\n    }));\n  }\n\n  render() {\n    const {\n      todosToShow,\n      todos,\n    } = this.state;\n    const {\n      toggleAllComplete,\n      handleDelete,\n      toggleComplete,\n      lengthOfTodos,\n      updateTodoToShow,\n      clearAllComplete,\n    } = this;\n    let todosNew = [];\n\n    if (todosToShow === 'all') {\n      todosNew = [...todos];\n    } else if (todosToShow === 'active') {\n      todosNew = todos.filter(todo => !todo.complete);\n    } else if (todosToShow === 'complete') {\n      todosNew = todos.filter(todo => todo.complete);\n    }\n\n    if (todos.length === 0) {\n      return (\n        <section className=\"todoapp\">\n          <TodoForm className=\"header\" onSubmit={this.addTodo} />\n        </section>\n      );\n    }\n    return (\n      <section className=\"todoapp\">\n        <TodoForm className=\"header\" onSubmit={this.addTodo} />\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            onClick={toggleAllComplete}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            name=\"toggleAll\"\n            className=\"toggle-all\"\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {todosNew.map(todo => (\n              <Todo\n                todos={todosNew}\n                todo={todo}\n                key={todo.id}\n                text={todo.text}\n                toDelete={() => handleDelete(todo.id)}\n                toggleComplete={() => toggleComplete(todo.id)}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\" style={{ display: 'block' }}>\n          <span className=\"todo-count\">\n            {`${lengthOfTodos()} items left`}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a\n                href=\"#/\"\n                onClick={() => updateTodoToShow('all')}\n                style={{\n                  borderColor:\n                    todosToShow === 'all'\n                      ? 'rgba(175, 47, 47, 0.2)'\n                      : '',\n                }}\n              >\n                All\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/active\"\n                onClick={() => updateTodoToShow('active')}\n                style={{\n                  borderColor:\n                    todosToShow === 'active'\n                      ? 'rgba(175, 47, 47, 0.2)'\n                      : '',\n                }}\n              >\n                Active\n              </a>\n            </li>\n\n            <li>\n              <a\n                href=\"#/completed\"\n                onClick={() => updateTodoToShow('complete')}\n                style={{\n                  borderColor:\n                    todosToShow === 'complete'\n                      ? 'rgba(175, 47, 47, 0.2)'\n                      : '',\n                }}\n              >\n                Completed\n              </a>\n            </li>\n          </ul>\n\n          <button\n            type=\"button\"\n            className=\"clear-completed\"\n            style={{ display: 'block' }}\n            onClick={clearAllComplete}\n          >\n            Clear all complete\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport TodoApp from './components/TodoApp/TodoApp';\n\nconst App = () => <TodoApp />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}